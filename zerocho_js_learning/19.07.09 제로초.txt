텍스트 게임
-숫자 야구-

수비자(컴퓨터) : 0~9 중 4개 수를 중복되지 않게 뽑음
공격자(사용자-입력) : 10번의 기회 안에 4개 수 맞추기
매 시도마다 맞춘 개수를 볼/스트라이크로 알려줌
	-숫자와 위치까지 맞을 경우 : 스트라이크
	-숫자만 맞춘 경우 : 볼

1. 수비자의 4개수 준비
ver.1
   1) 첫번째 숫자 : 0~9 중 하나를 무작위로 뽑음
   2) 두 번째 숫자 : 0~9 중 하나를 무작위로 뽑음
	- 첫번째와 같은가? yes-> 다시 뽑기
			no-> 세번째 숫자 뽑기
ver.2 배열이용
   1) 배열에 0~9까지 숫자를 넣음
   2) 하나씩 뽑음 -배열에서는 숫자를 뽑을 때마다 숫자가 사라짐

==> Math.random() ; Math객체의 random 메서드를 이용

@Ver.1 알고리즘
var number = [];
number[0] = Math.floor(Math.random() * 10); 	//첫번째 숫자
do {
  number[1] = Math.floor(Math.random() * 10);
} while(number[1] === number[0])		// 앞 수들과 같지 않을 때까지 숫자를 뽑음
do {
  number[2] = Math.floor(Math.random() * 10);
} while(number[2] === number[0] || number[2] === number[1])
do {
  number[3] = Math.floor(Math.random() * 10);
} while(number[3] === number[0] || number[3] === number[1] || number[3] === number[2])


@Ver.2
var list = [0,1,2,3,4,5,6,7,8,9];
var number = [];
for (var i = 0; i < 4; i++) {
  var select = Math.floor(Math.random() * list.length);
  console.log('list', list, 'number', number, 'length', list.length);
  number[i] = list.splice(select, 1)[0];
			     //빼낸 배열의 값만 뽑기 위해 splice뒤에 [0]을 붙임(배열의 첫번째값을 뽑기 위해.
}

	배열객체의 splice메서드 : 배열.splice(시작위치, 길이)
	   배열 조각내기. 시작위치부터 주어진 길이만큼
	   잘라내어 원래 배열에서 빼내고 반환하는 함수
	      이 때, 배열요소는 값이 아닌 배열로 빠짐!

=================수비자 준비완료================

=================공격자 공격시작================
var count = 0;
var strike = 0;
var ball = 0;
while (count < 10) {
  // 숫자를 입력받고 비교를 준비하는 부분
  var input = prompt('숫자를 입력하세요'); // 숫자를 받는 부분
  var inputArray = input.split(''); // split함수는 아래에 설명
  strike = 0; // strike와 ball의 개수를 초기화
  ball = 0;
  count++; // 시도 횟수는 하나 증가
  // 입력받은 숫자를 비교분석하는 부분
  for (var j = 0; j < 4; j++) {
    for (var k = 0; k < 4; k++) {
      if (number[j] == inputArray[k]) {
        if (j === k) {
          strike++;
        } else {
          ball++;
        }
        break;		//break문은 가장 가까운 반복문 하나를 			탈출함. 헷갈리지 마!
      }
    }
  }
  // 결과를 표시하는 부분 console객체는 밑에 설명
  if (strike === 4) {
    console.log('홈런!!! ' + (count - 1) + '번 만에 맞추셨습니다');
    break;
  } else if (count >= 10) {
    console.error('시도 횟수를 초과하셨습니다.');
  } else {
    console.info(inputArray.join('') + ': ' + strike + '스트라이크 ' + ball + '볼');
  }
}

==해설==>
열 번 반복적으로 숫자를 받을 것이기 때문에 반복문을 만듭니다. 그 전에 10번의 숫자를 셀 count 변수와, 스트라이크, 볼을 기록할 strike, ball 변수를 만들어줍니다. 반복문에는 이미 i 변수가 사용됐기 때문에 알파벳순서대로 j, k를 사용합니다

.. while문을 쓰는 이유 : 몇 번만에 맞출지 모르기 때문(for는 반복횟수가 지정되기 때문에 쓰지 않음)

var input변수는 prompt로 입력받은 문자열을 저장한다.
var inputArray = input.split('');
	-> input에 담긴 문자열을 한 글자씩 잘라 따로따로 나눔

		문자열.split(구분자) 메서드
	문자열을 쪼개서 배열로 만듬. 예시에서 구분자가 작은
	따옴표 두개인데, 한 글자씩 따로 떨어뜨리라는 말이다.
		ex) '1234'.split('') == ['1', '2', '3, '4']

그리고 중첩for문을 살펴보면,,,
1단계씩 차근차근
1. number[0] == inputArray[0] ?	//수비자의 0번째 배열요소와 
				공격자 입력숫자 4개를 모두 				비교
2. number[0] == inputArray[1] ?
3. number[0] == inputArray[2] ?
4. number[0] == inputArray[3] ?
5. number[1] == inputArray[0] ?	//수비자의 1번째 배열요소와
				공격자 입력숫자 4개를 모두 				비교
...

두 배열요소를 비교할때 === 이 아닌 == 을 사용하는 이유;
	자료형을 제외하고 값만 비교함
	(number는 숫자, inputArray는 문자열임)

맨 마지막 줄에 inputArray.join('');
=> 배열.join(구분자) : 배열을 합쳐 문자열로 만들고, 각 요소를 구분자로 표시하여 구분함
 	ex) [1,2,3,4].join('')=='1234'
	     [1,2,3,4].join(':')=='1:2:3:4'